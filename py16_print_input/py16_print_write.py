"""
输出格式美化
Python两种输出值的方式: 表达式语句和 print() 函数。

第三种方式是使用文件对象的 write() 方法，标准输出文件可以用 sys.stdout 引用。

如果你希望输出的形式更加多样，可以使用 str.format() 函数来格式化输出值。

如果你希望将输出的值转成字符串，可以使用 repr() 或 str() 函数来实现。
str()： 函数返回一个用户易读的表达形式。
repr()： 产生一个解释器易读的表达形式。
"""

# 打印多个内容时, 可以使用','进行链接,链接时会使用sep进行分隔, 默认为空格
print("我今年",18,"岁")
# 使用sep指定分隔符, 替换默认的空格
print("我今年",18,"岁", sep="---")
# 使用end指定结束符, 替换默认的换行
print("我今年",18,"岁", end="\n\n")
# 格式化输出 ,%s字符串, %d有符号的十进制整数(如%06d, 6位整数,前补0), %f浮点数($.2f, 表示小数点保留2位), %%输出%自身
print("我今年%d岁" % 18)
print("我今年%04d岁" % 18)
print("我今年%d岁, 我叫%s, 我是%s" % (18, "张三", "男"))

# input()函数, 会接收用户输入的内容, 并将内容作为字符串返回
age = input("输入变量值\n")
print("你输入的是",age)
print(type(age))
# print(age -10 ) # 报错, 字符串不能进行数学运算
# 类型转化
age = int(age)
print("输入数字减10 =", age-10)

