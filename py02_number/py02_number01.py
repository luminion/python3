"""
Python3 数字(Number)
Python 数字数据类型用于存储数值。

数据类型是不允许改变的，这就意味着如果改变数字数据类型的值，将重新分配内存空间。
Python 支持三种不同的数值类型：
整型(int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。布尔(bool)是整型的子类型。
浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）
复数( (complex)) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。

Python 数字类型转换
有时候，我们需要对数据内置的类型进行转换，数据类型的转换，你只需要将数据类型作为函数名即可。

int(x) 将x转换为一个整数。
float(x) 将x转换到一个浮点数。
complex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。
complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。
"""

# 将浮点数变量 a 转换为整数：
a = 1.0
int(a)

# 在整数除法中，除法 / 总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 // ：
b = 8 / 5 # 结果为1.6
b1 = 8 // 5 # 结果为1
# // 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系
c =  7.0//2 # 结果为浮点数
c1 = 7//2.0 # 结果为浮点数

d = 2 ** 7  # 2的7次方

# 不同类型的数混合运算时会将整数转换为浮点数
e =  3 * 3.75 / 1.5 # 7.5

# 在交互模式中，最后被输出的表达式结果被赋值给变量 _ 。例如：此处， _ 变量应被用户视为只读变量。
"""
>>> tax = 12.5 / 100
>>> price = 100.50
>>> price * tax
12.5625
>>> price + _
113.0625
>>> round(_, 2)
113.06
"""

